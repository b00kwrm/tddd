version: 2
jobs:
  build:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: setup python, venv, and install deps
          command: |
            pyenv install 3.6.3
            pyenv global 3.6.3
            python -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            git clone git@github.com:b00kwrm/pexplore.git
            cd pexplore
            python setup.py install
      - run:
          name: build docker container for testing cron
          command: |
            sudo /sbin/sysctl net.ipv4.conf.all.forwarding
            sudo /sbin/sysctl -w net.ipv4.conf.all.forwarding=1
            docker build -f docker/Dockerfile -t b00kwrm/tddd-cron .
      - run:
          name: run docker container
          command: |
            docker run -d -p 8000:22 b00kwrm/tddd-cron
      - run:
          name: check for running containers
          command: |
            docker ps
      - run:
          name: run docker mount script
          command: |
            sudo sudo $(pyenv shell system; pyenv which python) /home/circleci/repo/tools/get-docker-fs.py
      - run:
          name: sleep for 2 minutes
          command: |
            sleep 120
      - run:
          name: ls -lh
          command: |
            ls -lh
      - run:
         name: login with ssh to docker with python
         command: |
           pyenv global 3.6.3
           source venv/bin/activate
           python docker/ssh_pexpect.py
      - run:
          name: build custom plaso docker container
          command: |
            docker build -f docker/customplaso_docker -t b00kwrm/customplaso .
      - run:
          name: run docker log2timeline on /mnt/var/log store the plaso file as circleci artifact
          command: |
            docker run -v /mnt:/mnt -v /home/circleci/repo:/data b00kwrm/customplaso log2timeline.py --parsers linux,syslog --logfile /data/plaso.log /data/tddd-cron.plaso /mnt/var/log
      - run:
          name: run docker log2timeline on /mnt/tmp store the plaso file as circleci artifact
          command: |
            docker run -v /mnt:/mnt -v /home/circleci/repo:/data b00kwrm/customplaso log2timeline.py --yara_rules /data/data/kiwi_passwords.yar --parsers linux,syslog,pe --logfile /data/plaso.log /data/tddd-cron.plaso /mnt/tmp
      - run:
          name: run docker log2timeline on /mnt/home store the plaso file as circleci artifact
          command: |
            docker run -v /mnt:/mnt -v /home/circleci/repo:/data b00kwrm/customplaso log2timeline.py --parsers linux,syslog,bash --logfile /data/plaso.log /data/tddd-cron.plaso /mnt/home
      - run:
          name: run docker psort on /data/tddd-cron.plaso store the json file as circleci artifact;
          command: |
            docker run -v /mnt:/mnt -v /home/circleci/repo:/data b00kwrm/customplaso psort.py --analysis tagging --tagging-file /usr/local/share/plaso/tag_linux.txt -o json -w /data/tddd-cron-tagged.json /data/tddd-cron.plaso
      - store_artifacts:
          path: /home/circleci/repo/tddd-cron-tagged.json
          destination: tddd-cron-tagged.json
      - store_artifacts:
          path: /home/circleci/repo/tddd-cron.plaso
          destination: tddd-cron.plaso
      - run:
          name: run docker pinfo on /data/tddd-cron.plaso store the json file as circleci artifact;
          command: |
            docker run -v /mnt:/mnt -v /home/circleci/repo:/data b00kwrm/customplaso pinfo.py --output_format json -w /data/pinfo.json /data/tddd-cron.plaso
      - store_artifacts:
          path: /home/circleci/repo/pinfo.json
          destination: pinfo.json
      - run:
          name: copy tddd-cron-tagged.json, pinfo.json, and tag_linux.txt to test_data
          command: |
            cp tddd-cron-tagged.json test_data
            cp pinfo.json test_data
            cp tag_linux.txt
      - run:
          name: run pexplore on pinfo.json
          command: |
            source venv/bin/activate
            pexplore pinfo.json
      - run:
          name: run unit test
          command: |
            source venv/bin/activate
            py.test --cov=plaso_stats --cov-report html tests/test_plaso_stats.py
            tar czvf coverage-report.tgz htmlcov
      - store_artifacts:
          path: /home/circleci/repo/coverage-report.tgz
          destination: coverage-report.tgz
            
  deploy:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: build custom plaso docker container
          command: |
            docker build -f docker/customplaso_docker -t b00kwrm/customplaso .    
      - run:
          name: push to docker hub
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push b00kwrm/customplaso
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master